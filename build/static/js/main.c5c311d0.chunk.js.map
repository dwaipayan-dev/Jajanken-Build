{"version":3,"sources":["assets/Rock.jpg","assets/Paper.jpg","assets/Scissor.jpg","assets/Blank.jpg","assets/rock-icon.svg","assets/paper-icon.svg","assets/scissor-icon.svg","component/Game.tsx","component/Welcome.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GameComponent","props","state","clicked","name","match","params","count","freqObj","rock","paper","scissor","win","draw","loss","hidden","saveMessage","playerImg","String","Blank","computerImg","increase","bind","axios","get","this","then","res","console","log","data","playerToLoad","setState","catch","err","waitOneSec","setTimeout","reqBody","post","response","selection","choices","userProbArr","aiPredictsUserChoice","maxProb","Math","max","maxProbIndex","i","push","computerChoice","floor","random","length","playerImage","computerImage","Rock","Paper","Scissor","choiceArr","epsilon","rockBias","paperBias","scissorBias","maxBias","className","onClick","saveMyState","visibility","to","src","userSelection","disabled","rockico","paperico","scissorico","React","Component","WelcomeComponent","event","target","value","type","placeholder","onChange","e","updateName","App","exact","path","component","Welcome","Game","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5c311d0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Rock.b1cfaf52.jpg\";","export default __webpack_public_path__ + \"static/media/Paper.a642db4e.jpg\";","export default __webpack_public_path__ + \"static/media/Scissor.a3f22a75.jpg\";","export default __webpack_public_path__ + \"static/media/Blank.a128bb17.jpg\";","export default __webpack_public_path__ + \"static/media/rock-icon.fb90cf51.svg\";","export default __webpack_public_path__ + \"static/media/paper-icon.6953ff09.svg\";","export default __webpack_public_path__ + \"static/media/scissor-icon.04ea40c6.svg\";","import React, {FunctionComponent, useState} from 'react';\r\nimport { RouteProps } from 'react-router';\r\nimport { setTimeout } from 'timers';\r\nimport './Game.css';\r\nimport Rock from '../assets/Rock.jpg';\r\nimport Paper from '../assets/Paper.jpg';\r\nimport Scissor from '../assets/Scissor.jpg';\r\nimport Blank from '../assets/Blank.jpg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport rockico from '../assets/rock-icon.svg';\r\nimport paperico from '../assets/paper-icon.svg';\r\nimport scissorico from '../assets/scissor-icon.svg';\r\nimport axios from 'axios';\r\n\r\n\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nclass GameComponent extends React.Component {\r\n    state: any = {};\r\n    clicked: boolean = false;\r\n    name: String = \"\";\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.name = props.match.params.name;\r\n        this.clicked = false;\r\n        this.state = {\r\n            count: 0, freqObj: {\r\n                rock: 0,\r\n                paper: 0,\r\n                scissor: 0\r\n            }, win: 0, draw: 0, loss: 0, clicked: false, hidden: true, saveMessage: \"\",\r\n            playerImg: String(Blank), computerImg: String(Blank)\r\n        }\r\n        this.increase = this.increase.bind(this)\r\n        //this.waitOneSec = this.waitOneSec.bind(this)\r\n        \r\n\r\n    }\r\n    \r\n    componentDidMount(){\r\n        axios.get(`https://jajanken-app-api.herokuapp.com/loadState/${this.name}`).then((res)=>{ \r\n            console.log(res.data.playerToLoad);\r\n            this.setState({...res.data.playerToLoad})\r\n            \r\n        }).catch((err)=>{\r\n            console.log(err);\r\n\r\n        })\r\n    }\r\n\r\n    increase() {\r\n        //asynchronous, state does not update until renders.\r\n        this.setState({ ...this.state, count: this.state.count + 1, clicked: true });\r\n        this.waitOneSec();\r\n    }\r\n\r\n    waitOneSec() {\r\n        setTimeout(() => {\r\n            this.setState({ ...this.state,  playerImg: String(Blank), \r\n                computerImg: String(Blank), clicked: false })\r\n        }, 1000);\r\n    }\r\n\r\n    saveMyState(){\r\n        let reqBody = {...this.state};\r\n        this.setState({...this.state, hidden: false, saveMessage: \"Saving State\"});\r\n        axios.post(\"https://jajanken-app-api.herokuapp.com/saveState\", {\r\n            name: this.name,\r\n            state: reqBody\r\n        }).then((response)=>{\r\n            console.log(response);\r\n            this.setState({...this.state, hidden: false, saveMessage: \"State Saved\"});\r\n\r\n            setTimeout(() => {\r\n                this.setState({ ...this.state, hidden: true, saveMessage: \"\"});\r\n            }, 3000);\r\n\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n        })\r\n\r\n\r\n        \r\n    }\r\n\r\n    /*Proof of implementation\r\nlet count = 0;\r\nfor (let i = 0; i < 100; i++) {\r\n    let u = Math.floor(Math.random() * 100) * (7 / 10);\r\n    let v = Math.floor(Math.random() * 100) * (3 / 10);\r\n    if (v >= u) {\r\n        count += 1;\r\n    }\r\n}\r\nconsole.log(count);\r\n\r\n*/\r\n\r\nuserSelection(selection: number){\r\n    //asynchronous, state does not update until renders.\r\n    let choices = [\"rock\", \"paper\", \"scissor\"]\r\n    this.setState({ ...this.state, clicked: true });\r\n    this.waitOneSec();\r\n    let userProbArr = this.aiPredictsUserChoice(this.state.freqObj, this.state.count);\r\n    let maxProb = Math.max(...userProbArr);\r\n    let maxProbIndex = [];\r\n    for(let i = 0; i < 3; i++){\r\n        if(userProbArr[i] === maxProb){\r\n            maxProbIndex.push(i);\r\n        }\r\n    }\r\n    let choiceAmongLikely = Math.floor(Math.random() * (maxProbIndex.length - 1))\r\n    let computerChoice = (maxProbIndex[choiceAmongLikely] + 1)%3;\r\n    let playerImage = \"\";\r\n    let computerImage = \"\";\r\n    switch(selection){\r\n        case 0:\r\n            playerImage = String(Rock);\r\n            break;\r\n        case 1:\r\n            playerImage = String(Paper);\r\n            break;\r\n        case 2:\r\n            playerImage = String(Scissor);\r\n            break;\r\n        default:\r\n            playerImage = String(Blank);\r\n    }\r\n\r\n    switch(computerChoice){\r\n        case 0:\r\n            computerImage = String(Rock);\r\n            break;\r\n        case 1:\r\n            computerImage = String(Paper);\r\n            break;\r\n        case 2:\r\n            computerImage = String(Scissor);\r\n            break;\r\n        default:\r\n            computerImage = String(Blank);\r\n    }\r\n\r\n    \r\n    console.log(userProbArr);\r\n    console.log(`User choice is ${choices[selection]}, Computer chose ${choices[computerChoice]}`);\r\n    this.state.freqObj[choices[selection]] += 1;\r\n    console.log(this.state.freqObj);\r\n    if(selection === computerChoice){\r\n        console.log(\"It is a draw\");\r\n        this.setState({...this.state, count: this.state.count + 1, draw: this.state.draw + 1, playerImg: playerImage, \r\n            computerImg:  computerImage, clicked: true});\r\n    }\r\n    if(computerChoice === (selection + 1)%3){\r\n        console.log(\"It is a loss\");\r\n        this.setState({...this.state, count: this.state.count + 1, loss: this.state.loss + 1, playerImg: playerImage, \r\n            computerImg:  computerImage, clicked: true});\r\n    }\r\n    if(computerChoice === (selection + 2)%3){\r\n        console.log(\"It is a win\");\r\n        this.setState({...this.state, count: this.state.count + 1, win: this.state.win + 1, playerImg: playerImage, \r\n            computerImg:  computerImage, clicked: true});\r\n    }\r\n}\r\n\r\naiPredictsUserChoice(freqObj: any, count: number){\r\n    console.log(count);\r\n    if (count === 0) {\r\n        let choiceArr = [];\r\n        choiceArr[0] = Math.floor(Math.random() * 50 + 15);\r\n        choiceArr[1] = Math.floor(Math.random() * 50 + 15);\r\n        choiceArr[2] = Math.floor(Math.random() * 50 + 15);\r\n        return(choiceArr);\r\n    }\r\n    else{\r\n        let choiceArr = [];\r\n        let epsilon = 0.00001; //least propability to avoid multiplication with zero\r\n        let rockBias = (freqObj.rock / count) + epsilon;\r\n        let paperBias = (freqObj.paper / count) + epsilon;\r\n        let scissorBias = (freqObj.scissor / count) + epsilon;\r\n        \r\n        let maxBias = Math.max(rockBias, paperBias, scissorBias);\r\n        //if rock and paper have same user preference history. Prefer Paper\r\n        if(rockBias === paperBias && rockBias === maxBias && rockBias !== scissorBias){\r\n            paperBias = epsilon;\r\n        }\r\n\r\n        if(paperBias === scissorBias && paperBias === maxBias && paperBias !== rockBias){\r\n            scissorBias = epsilon;\r\n        }\r\n        \r\n        if(scissorBias === rockBias && scissorBias === maxBias && scissorBias !== paperBias){\r\n            rockBias = epsilon;\r\n        }\r\n        console.log(rockBias, paperBias, scissorBias);\r\n        choiceArr[0] = Math.floor(Math.random() * 50 + 15) * rockBias;\r\n        choiceArr[1] = Math.floor(Math.random() * 50 + 15) * paperBias;\r\n        choiceArr[2] = Math.floor(Math.random() * 50 + 15) * scissorBias;\r\n\r\n        return choiceArr;\r\n    }\r\n}\r\n\r\n\r\nrender(){\r\n    return (\r\n        <div className = \"mt-5\">\r\n            <div className = \"float-left ml-2\">\r\n                <button className=\"btn btn-lg btn-outline-light\" onClick = {()=>{\r\n                    this.saveMyState()\r\n                    }}>Save Game</button>\r\n            \r\n                <div hidden = {this.state.visibility}>{this.state.saveMessage}</div>\r\n            </div>\r\n        \r\n            <div className = \"float-right mr-2\">\r\n                \r\n                <Link to= {\"/\"}>\r\n                    <button className=\"btn btn-outline-light\"><h2><span>&#10060;</span></h2></button>\r\n                </Link>\r\n            </div>\r\n\r\n            <h1>Ready {this.name}... Rock... Paper... Scissor... Go!!!!</h1>\r\n\r\n            \r\n            <h2>{\"Match: \" + this.state.count}</h2>\r\n            {/*<h2>{'' + this.state.clicked}</h2>*/}\r\n            {/*<button onClick = {this.increase} disabled = {this.state.clicked}>INCREMENT</button>*/}\r\n\r\n            <div className = \"row mt-5\">\r\n                <h2 className= \"col col-4 text-success status\">Player Win: {this.state.win}</h2>    \r\n                <h2 className = \"col col-4 text-warning status\">Draw: {this.state.draw}</h2>  \r\n                <h2 className = \"col col-4 text-danger status\">CPU Win: {this.state.loss}</h2>\r\n            </div>\r\n\r\n            <div className = \"row mt-5 mb-5\"> \r\n                <div className = \"col-6 col-sm-6\">\r\n                    <img className = \"imageProp\" src={this.state.playerImg}/>\r\n                </div>\r\n                <div className = \"col-6 col-sm-6\">\r\n                    <img className = \"imageProp\" src={this.state.computerImg}/>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className = \"mb-2\">\r\n                <button className= \"btn btn-lg btn-danger mr-5 rounded-circle\" onClick={()=>{\r\n                    this.userSelection(0)\r\n                } } disabled={this.state.clicked}><img src={String(rockico)} className= \"iconProp\"/></button>\r\n\r\n                <button className=\"btn btn-lg btn-warning mr-5 rounded-circle\" onClick={()=>{\r\n                    this.userSelection(1)\r\n                } } disabled={this.state.clicked}><img src={String(paperico)} className= \"iconProp\"/></button>\r\n\r\n                <button className = \"btn btn-lg btn-info rounded-circle\" onClick={()=>{\r\n                    this.userSelection(2)\r\n                } } disabled={this.state.clicked}><img src={String(scissorico)} className= \"iconProp\"/></button>\r\n\r\n            </div>\r\n            \r\n        </div> \r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default GameComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Welcome.css'\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass WelcomeComponent extends React.Component{\r\n    state: any = {}\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {name: \"\"};\r\n    }\r\n\r\n    updateName(event: any){\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"welcome-prop\">\r\n                <h3 className = \"mx-auto col col-sm-7\">Welcome to Jajanken. Please enter your name to start a new Game OR continue from your last save.</h3>\r\n                <div className = \"mx-auto col col-sm-5 form-group\">\r\n                <p className=\"mt-5 myp\">Jajanken is japanese for the Rock, Paper, Scissor game. This is a smart web game where you play against the computer and the computer takes your past moves into account when making it's move. </p>\r\n                <p className=\"mt-5 myp\">Will you surpise the Computer OR will the computer surprise you!!</p>\r\n                <input className = \"form-control mt-5\" type=\"text\" placeholder = \"Your Name...\" onChange = {(e)=>{this.updateName(e)}}/>\r\n                </div>\r\n\r\n            <Link to= {\"/game/\" + this.state.name}>\r\n                <button className = \"btn btn-dark\" type = \"button\">Let the game begin!!</button>\r\n            </Link>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default WelcomeComponent;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Game from './component/Game'\nimport Welcome from './component/Welcome';\nimport {BrowserRouter as Router, Route, Link, Switch} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n              <Route exact path='/' component={Welcome}></Route>\n              <Route exact path='/game/:name' component={Game}></Route>\n            </Switch>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}